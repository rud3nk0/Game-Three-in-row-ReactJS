Функционал методов и классов 

n) Sidebar буде містити кнопки компонент батон з різним функціоналом 
    (старт, пауза, почати знову, вихід)
    Button ---> props.bacground, props.text

  1) onClick={start} метод старт
   буде запускати при клікові на кнопку
    буде запускати рух шариків і таймер 

    2) onClick={pause} метод старт
   буде запускати при клікові на кнопку
    буде запускати рух шариків і таймер 

    3) onClick={restart} метод старт
   буде запускати при клікові на кнопку
    буде запускати рух шариків і таймер 

    4) onClick={exit} метод старт
   буде запускати при клікові на кнопку
    буде запускати рух шариків і таймер 

n) method record()который будет выводить на экран (компонет Record) наибольшие кол-во выбытих вместе шаров за 1 игру   
    создаём переменную let record = "000"
         этот метод должен брать откуда-то данные (цыфру) про количество
         выбитых шаров и порівнюємо їх з попередніми значеннями або 0 і виводимо на екран
         


n) метод Score() который будет выводить на экран (компонет Score) 3 нуля  
    создаём переменную let score = "000"
    этот метод должен брать откуда-то данные (цыфру) про количество
         выбитых шаров и приплюсовывать их в кучу  
         *********этот метод будет вызыватся в компоненте Header
          с переменной let count - кол-во выбитых шаров************
    

n) gameElements - let arrElement = [<Blue />, <Red />, <Yellow />, <White/>, <Green/>] ; масив компонентів
    random - Math.floor(Math.random() * 5)

    подія клік на tr (ячейка) - метод handlerClick() починае перевірку однакових індексів масива
        поряд з кліком на 1 tr і тд

    1 елмент
    8 рядків <tr className='r1'> - для знаходження елементу по рядах
    8 колонок <td className='c-1'> для знаходження елементу по колонках
    
    ячейка - сприймається як окремий обьект
     який рандомно заповнюється gameElements

     рядок для порівняння елементів масива горизонтальний 

     колонка для порівняння елементів масива вертикально 
